r authentication systemŠ- Èide måsóaçes éî ány féìe æoòmaô (imagås, áõäiï¬ äïãumåîts¬ åtc®)
- Cõsôomizaâìe stågáîogòağhù paráíeôårsºŠ  ­ Start âiô (Ó)º Ókiğ S âits at tèe âegéîniîg oæ the ãaòòiåò filå
  ­ Periodicity (L): Every Lth bit will be modified to store the secret message
  - Mode (C): How L changes during encoding (constant, alternating, increasing, fibonacci)
- Extract hidden messages using the same parameters
- Public gallery of steganography posts
- File upload and download functionality

## Implementation Details

### Steganography Algorithm

The steganography implementation uses bit-level modification to hide messages in files:

1. The message file is read as binary data
2. The size of the message (in bits) is prepended to the message data (32 bits)
3. The carrier file is read as binary data
4. Beginning from the specified start bit (S), every Lth bit of the carrier file is replaced with a bit from the message
5. The modified carrier file is saved, preserving the original format

The periodicity (L) can vary according to the chosen mode:
- **Constant**: L remains the same throughout (e.g., L=8)
- **Alternating**: L alternates between L and 2L (e.g., 8, 16, 8, 16...)
- **Increasing**: L increases by 4 each time, resets after L+20 (e.g., 8, 12, 16, 20, 24, 28, 8...)
- **Fibonacci**: L follows the Fibonacci sequence starting with L (e.g., 8, 8, 16, 24, 40, 64...)

Message extraction reverses this process using the same parameters.

## Installation
